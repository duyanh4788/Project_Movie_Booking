{"ast":null,"code":"var _jsxFileName = \"/home/atat-dev/Desktop/VS_CODE/ReactJS/Project_Movie_Booking/src/pages/ListFlim/Listphim.page.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { memo, useEffect, useRef, useState } from \"react\"; // redux\n\nimport { useDispatch, useSelector } from \"react-redux\"; // reducer dispatch\n\nimport { getMovieList_Action } from \"../../store/actions/movie.action\"; // react-router\n\nimport { useHistory } from \"react-router\"; // material\n\nimport PlayArrowIcon from \"@material-ui/icons/PlayArrow\";\nimport { Button, Container, Fab, Grid } from \"@material-ui/core\"; //slick\n\nimport Slider from \"react-slick\";\nimport \"slick-carousel/slick/slick.css\";\nimport \"slick-carousel/slick/slick-theme.css\"; // css\n\nimport \"./css/listPhim.css\"; // modal\n\nimport \"../../../node_modules/react-modal-video/scss/modal-video.scss\";\nimport ModalVideo from \"react-modal-video\";\nimport Loader from \"../../components/Loader/Loader\";\n/**\n *  8-05-02021 Vũ Duy Anh\n * Carousel List => not Done\n *  pages/ListPhim access to Movie-detail/Movie-detail.page\n */\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ListPhim = () => {\n  _s();\n\n  const ref = useRef({});\n  const hisTory = useHistory();\n  const dispatch = useDispatch(); // show loading\n\n  const loading = useSelector(state => state.CommonReducer.loading); // get data reducer\n\n  const movieList = useSelector(state => {\n    var _state$movieReducer;\n\n    return ((_state$movieReducer = state.movieReducer) === null || _state$movieReducer === void 0 ? void 0 : _state$movieReducer.movieList) || {};\n  }); // maNhom\n\n  const [maNhom, setMaNhom] = React.useState(\"GP01\"); // call api\n\n  useEffect(() => {\n    dispatch(getMovieList_Action(maNhom));\n  }, [dispatch, maNhom]); // setting carousel\n\n  const settings = {\n    // dots: false,\n    speed: 500,\n    slidesToShow: 4,\n    slidesToScroll: 1,\n    rows: 2,\n    responsive: [{\n      breakpoint: 1000,\n      settings: {\n        slidesToShow: 3,\n        slidesToScroll: 3,\n        rows: 2\n      }\n    }, {\n      breakpoint: 576,\n      settings: {\n        slidesToShow: 2,\n        slidesToScroll: 1,\n        rows: 1,\n        arrows: false\n      }\n    }, {\n      breakpoint: 300,\n      settings: {\n        slidesToShow: 1,\n        slidesToScroll: 1,\n        rows: 1,\n        arrows: false\n      }\n    }]\n  }; // popup video youtube\n\n  const [isOpen, setOpen] = useState(false);\n  const [stateTrailer] = useState({\n    trailers: \"\"\n  });\n\n  const handleOpen = subtitle => {\n    subtitle = subtitle.split(\"/\");\n\n    if (subtitle.length === 5) {\n      stateTrailer.trailers = subtitle[4];\n    } else if (subtitle.length === 4) {\n      stateTrailer.trailers = subtitle[3];\n    }\n\n    setOpen(true);\n  }; // popup video youtube\n\n\n  const renderListPhim = () => {\n    return movieList === null || movieList === void 0 ? void 0 : movieList.map((item, index) => {\n      let setLink = item.hinhAnh.split(\":\");\n      let urlImg = setLink[0] + \"s:\" + setLink[1];\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"slide\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"sliderAfter\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            className: \"imageSlider\",\n            src: urlImg,\n            alt: item.hinhAnh\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"intro\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"introOne\",\n              children: item.maPhim\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"introTwo\",\n              children: [\" \", item.tenPhim.slice(0, 18), \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            color: \"secondary\",\n            className: \"buttonslide\",\n            onClick: () => {\n              hisTory.push(`/phimDetail/${item.maPhim}`); // transmission to Movie-detail/Movie-detail.compnent\n            },\n            children: \"Mua V\\xE9\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"modalPlay\",\n          children: /*#__PURE__*/_jsxDEV(PlayArrowIcon, {\n            className: \"iconPlay\",\n            onClick: () => handleOpen(item.trailer)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 11\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this);\n    });\n  };\n\n  const renderMaNhom = () => {\n    let arrMaNhom = [\"GP01\", \"GP02 \", \"GP03\", \"GP04 \", \"GP05\", \"GP06 \", \"GP07\", \"GP08 \", \"GP09\", \"GP10 \"];\n    return arrMaNhom.map((item, index) => {\n      return /*#__PURE__*/_jsxDEV(Fab, {\n        size: \"small\",\n        color: \"secondary\",\n        onClick: () => getListGroup(item),\n        children: item\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 9\n      }, this) // <MenuItem key={index} value={item}>\n      //   Nhóm : {item}\n      // </MenuItem>\n      ;\n    });\n  };\n\n  const getListGroup = maNhom => {\n    setMaNhom(maNhom);\n  };\n\n  return loading ? /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 163,\n    columnNumber: 5\n  }, this) : /*#__PURE__*/_jsxDEV(Container, {\n    maxWidth: \"md\",\n    className: \"sliderListPhim\",\n    id: \"lichChieu\",\n    children: [/*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        lg: 12,\n        style: {\n          textAlign: \"center\",\n          marginTop: \"30px\",\n          marginBottom: \"20px\"\n        },\n        children: renderMaNhom()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Slider, {\n      ref: ref,\n      ...settings,\n      children: renderListPhim()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ModalVideo, {\n      channel: \"youtube\",\n      youtube: {\n        mute: 1,\n        autoplay: 1\n      },\n      isOpen: isOpen,\n      videoId: stateTrailer.trailers,\n      onClose: () => setOpen(false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 165,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ListPhim, \"OjOSCIb1NFxzANbcuyZVLIPryiI=\", false, function () {\n  return [useHistory, useDispatch, useSelector, useSelector];\n});\n\n_c = ListPhim;\nexport default _c2 = /*#__PURE__*/memo(ListPhim);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"ListPhim\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["/home/atat-dev/Desktop/VS_CODE/ReactJS/Project_Movie_Booking/src/pages/ListFlim/Listphim.page.jsx"],"names":["React","memo","useEffect","useRef","useState","useDispatch","useSelector","getMovieList_Action","useHistory","PlayArrowIcon","Button","Container","Fab","Grid","Slider","ModalVideo","Loader","ListPhim","ref","hisTory","dispatch","loading","state","CommonReducer","movieList","movieReducer","maNhom","setMaNhom","settings","speed","slidesToShow","slidesToScroll","rows","responsive","breakpoint","arrows","isOpen","setOpen","stateTrailer","trailers","handleOpen","subtitle","split","length","renderListPhim","map","item","index","setLink","hinhAnh","urlImg","maPhim","tenPhim","slice","push","trailer","renderMaNhom","arrMaNhom","getListGroup","textAlign","marginTop","marginBottom","mute","autoplay"],"mappings":"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","sourcesContent":["import React, { memo, useEffect, useRef, useState } from \"react\";\n// redux\nimport { useDispatch, useSelector } from \"react-redux\";\n// reducer dispatch\nimport { getMovieList_Action } from \"../../store/actions/movie.action\";\n// react-router\nimport { useHistory } from \"react-router\";\n// material\nimport PlayArrowIcon from \"@material-ui/icons/PlayArrow\";\nimport { Button, Container, Fab, Grid } from \"@material-ui/core\";\n//slick\nimport Slider from \"react-slick\";\nimport \"slick-carousel/slick/slick.css\";\nimport \"slick-carousel/slick/slick-theme.css\";\n// css\nimport \"./css/listPhim.css\";\n// modal\nimport \"../../../node_modules/react-modal-video/scss/modal-video.scss\";\nimport ModalVideo from \"react-modal-video\";\nimport Loader from \"../../components/Loader/Loader\";\n\n\n/**\n *  8-05-02021 Vũ Duy Anh\n * Carousel List => not Done\n *  pages/ListPhim access to Movie-detail/Movie-detail.page\n */\n\nconst ListPhim = () => {\n  const ref = useRef({});\n  const hisTory = useHistory();\n  const dispatch = useDispatch();\n  // show loading\n  const loading = useSelector((state) => state.CommonReducer.loading);\n  // get data reducer\n  const movieList = useSelector((state) => {\n    return state.movieReducer?.movieList || {};\n  });\n  // maNhom\n  const [maNhom, setMaNhom] = React.useState(\"GP01\");\n  // call api\n  useEffect(() => {\n    dispatch(getMovieList_Action(maNhom));\n  }, [dispatch, maNhom]);\n\n  // setting carousel\n  const settings = {\n    // dots: false,\n\n    speed: 500,\n    slidesToShow: 4,\n    slidesToScroll: 1,\n    rows: 2,\n    responsive: [\n      {\n        breakpoint: 1000,\n        settings: {\n          slidesToShow: 3,\n          slidesToScroll: 3,\n          rows: 2,\n        },\n      },\n      {\n        breakpoint: 576,\n        settings: {\n          slidesToShow: 2,\n          slidesToScroll: 1,\n          rows: 1,\n          arrows: false,\n        },\n      },\n      {\n        breakpoint: 300,\n        settings: {\n          slidesToShow: 1,\n          slidesToScroll: 1,\n          rows: 1,\n          arrows: false,\n        },\n      },\n    ],\n  };\n\n  // popup video youtube\n  const [isOpen, setOpen] = useState(false);\n  const [stateTrailer] = useState({\n    trailers: \"\",\n  });\n  const handleOpen = (subtitle) => {\n    subtitle = subtitle.split(\"/\");\n    if (subtitle.length === 5) {\n      stateTrailer.trailers = subtitle[4];\n    } else if (subtitle.length === 4) {\n      stateTrailer.trailers = subtitle[3];\n    }\n    setOpen(true);\n  };\n  // popup video youtube\n\n  const renderListPhim = () => {\n    return movieList?.map((item, index) => {\n      let setLink = item.hinhAnh.split(\":\");\n      let urlImg = setLink[0] + \"s:\" + setLink[1];\n      return (\n        <div key={index} className=\"slide\">\n          <div className=\"sliderAfter\">\n            <img className=\"imageSlider\" src={urlImg} alt={item.hinhAnh} />\n            <div className=\"intro\">\n              <span className=\"introOne\">{item.maPhim}</span>\n              <span className=\"introTwo\"> {item.tenPhim.slice(0, 18)} </span>\n            </div>\n            <Button\n              variant=\"contained\"\n              color=\"secondary\"\n              className=\"buttonslide\"\n              onClick={() => {\n                hisTory.push(`/phimDetail/${item.maPhim}`); // transmission to Movie-detail/Movie-detail.compnent\n              }}\n            >\n              Mua Vé\n            </Button>\n          </div>\n          <label className=\"modalPlay\">\n            <PlayArrowIcon\n              className=\"iconPlay\"\n              onClick={() => handleOpen(item.trailer)}\n            />\n          </label>\n        </div>\n      );\n    });\n  };\n  const renderMaNhom = () => {\n    let arrMaNhom = [\n      \"GP01\",\n      \"GP02 \",\n      \"GP03\",\n      \"GP04 \",\n      \"GP05\",\n      \"GP06 \",\n      \"GP07\",\n      \"GP08 \",\n      \"GP09\",\n      \"GP10 \",\n    ];\n    return arrMaNhom.map((item, index) => {\n      return (\n        <Fab size=\"small\" color=\"secondary\" key={index} onClick={() => getListGroup(item)}>\n          {item}\n        </Fab>\n        // <MenuItem key={index} value={item}>\n        //   Nhóm : {item}\n        // </MenuItem>\n      );\n    });\n  };\n\n  const getListGroup = (maNhom) => {\n    setMaNhom(maNhom)\n  }\n\n  return loading ? (\n    <Loader />\n  ) : (\n    <Container maxWidth=\"md\" className=\"sliderListPhim\" id=\"lichChieu\">\n      <Grid container>\n        <Grid item lg={12} style={{ textAlign: \"center\", marginTop: \"30px\", marginBottom: \"20px\" }}>\n          {renderMaNhom()}\n        </Grid>\n      </Grid>\n\n      <Slider ref={ref} {...settings}>\n        {renderListPhim()}\n      </Slider>\n      <ModalVideo\n        channel=\"youtube\"\n        youtube={{ mute: 1, autoplay: 1 }}\n        isOpen={isOpen}\n        videoId={stateTrailer.trailers}\n        onClose={() => setOpen(false)}\n      />\n    </Container>\n  );\n};\n\nexport default memo(ListPhim);\n"]},"metadata":{},"sourceType":"module"}