{"ast":null,"code":"import { ADD_LIST_MOVIE_MANAGEMENT, CREAT_SCHEDULE_MOVIE_MANAGEMENT, DELETE_LIST_MOVIE_MANAGEMENT, GET_CODE_CINEMA_MOVIE_MANAGEMENT, GET_CUM_RAP_MOVIE_MANAGEMENT, GET_LIST_MOVIE_MANAGEMENT, GET_LIST_MOVIE_SEARCH_MANAGEMENT, GET_MAPHIM_MOVIE_MANAGEMENT, INFO_MOVIE_MANAGEMENT, PAGE_FORM_MOVIE_MANAGEMENT, UPDATE_LIST_MOVIE_MANAGEMENT } from \"../constants/movieManagement.constant\";\nconst initialState = {\n  movieList: [],\n  pageFormAdd: \"listMovie\",\n  infoMovie: {},\n  maPhim: \"\",\n  codeCinema: {},\n  codeCumRap: [],\n  updateSuccess: 0\n};\nexport const MovieManagementReducer = (state = initialState, {\n  type,\n  payload\n}) => {\n  let movieListUpdate = [...state.movieList];\n\n  switch (type) {\n    case GET_LIST_MOVIE_MANAGEMENT:\n      {\n        state.movieList = payload;\n        return { ...state,\n          ...payload\n        };\n      }\n\n    case GET_LIST_MOVIE_SEARCH_MANAGEMENT:\n      {\n        movieListUpdate = payload;\n        state.movieList = movieListUpdate;\n        return { ...state,\n          ...payload\n        };\n      }\n\n    case GET_CODE_CINEMA_MOVIE_MANAGEMENT:\n      {\n        state.codeCinema = payload;\n        return { ...state\n        };\n      }\n\n    case GET_CUM_RAP_MOVIE_MANAGEMENT:\n      {\n        state.codeCumRap = payload;\n        return { ...state\n        };\n      }\n\n    case DELETE_LIST_MOVIE_MANAGEMENT:\n      {\n        let index = movieListUpdate.find(item => item.maPhim === payload);\n\n        if (index !== -1) {\n          movieListUpdate.splice(index, 1);\n        }\n\n        state.movieList = movieListUpdate;\n        return { ...state\n        };\n      }\n\n    case INFO_MOVIE_MANAGEMENT:\n      {\n        state.infoMovie = payload;\n        return { ...state\n        };\n      }\n\n    case PAGE_FORM_MOVIE_MANAGEMENT:\n      {\n        state.pageFormAdd = payload;\n        return { ...state\n        };\n      }\n\n    case UPDATE_LIST_MOVIE_MANAGEMENT:\n      {\n        state.updateSuccess = payload;\n        return { ...state\n        };\n      }\n\n    case ADD_LIST_MOVIE_MANAGEMENT:\n      {\n        return { ...state\n        };\n      }\n\n    case GET_MAPHIM_MOVIE_MANAGEMENT:\n      {\n        state.maPhim = payload;\n        return { ...state\n        };\n      }\n\n    case CREAT_SCHEDULE_MOVIE_MANAGEMENT:\n      {\n        return { ...state\n        };\n      }\n\n    default:\n      return state;\n  }\n};\n_c = MovieManagementReducer;\n\nvar _c;\n\n$RefreshReg$(_c, \"MovieManagementReducer\");","map":{"version":3,"sources":["/home/atat-dev/Desktop/VS_CODE/Project_Movie_Booking/src/store/reducers/movieManagement.reducer.js"],"names":["ADD_LIST_MOVIE_MANAGEMENT","CREAT_SCHEDULE_MOVIE_MANAGEMENT","DELETE_LIST_MOVIE_MANAGEMENT","GET_CODE_CINEMA_MOVIE_MANAGEMENT","GET_CUM_RAP_MOVIE_MANAGEMENT","GET_LIST_MOVIE_MANAGEMENT","GET_LIST_MOVIE_SEARCH_MANAGEMENT","GET_MAPHIM_MOVIE_MANAGEMENT","INFO_MOVIE_MANAGEMENT","PAGE_FORM_MOVIE_MANAGEMENT","UPDATE_LIST_MOVIE_MANAGEMENT","initialState","movieList","pageFormAdd","infoMovie","maPhim","codeCinema","codeCumRap","updateSuccess","MovieManagementReducer","state","type","payload","movieListUpdate","index","find","item","splice"],"mappings":"AAAA,SAASA,yBAAT,EAAoCC,+BAApC,EAAqEC,4BAArE,EAAmGC,gCAAnG,EAAqIC,4BAArI,EAAmKC,yBAAnK,EAA8LC,gCAA9L,EAAgOC,2BAAhO,EAA6PC,qBAA7P,EAAoRC,0BAApR,EAAgTC,4BAAhT,QAAoV,uCAApV;AAEA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,SAAS,EAAE,EADM;AAEjBC,EAAAA,WAAW,EAAE,WAFI;AAGjBC,EAAAA,SAAS,EAAE,EAHM;AAIjBC,EAAAA,MAAM,EAAE,EAJS;AAKjBC,EAAAA,UAAU,EAAE,EALK;AAMjBC,EAAAA,UAAU,EAAE,EANK;AAOjBC,EAAAA,aAAa,EAAE;AAPE,CAArB;AAUA,OAAO,MAAMC,sBAAsB,GAAG,CAACC,KAAK,GAAGT,YAAT,EAAuB;AAAEU,EAAAA,IAAF;AAAQC,EAAAA;AAAR,CAAvB,KAA6C;AAC/E,MAAIC,eAAe,GAAG,CAAC,GAAGH,KAAK,CAACR,SAAV,CAAtB;;AACA,UAAQS,IAAR;AAEI,SAAKhB,yBAAL;AAAgC;AAC5Be,QAAAA,KAAK,CAACR,SAAN,GAAkBU,OAAlB;AACA,eAAO,EAAE,GAAGF,KAAL;AAAY,aAAGE;AAAf,SAAP;AACH;;AACD,SAAKhB,gCAAL;AAAuC;AACnCiB,QAAAA,eAAe,GAAGD,OAAlB;AACAF,QAAAA,KAAK,CAACR,SAAN,GAAkBW,eAAlB;AACA,eAAO,EAAE,GAAGH,KAAL;AAAY,aAAGE;AAAf,SAAP;AACH;;AACD,SAAKnB,gCAAL;AAAuC;AACnCiB,QAAAA,KAAK,CAACJ,UAAN,GAAmBM,OAAnB;AACA,eAAO,EAAE,GAAGF;AAAL,SAAP;AACH;;AACD,SAAKhB,4BAAL;AAAmC;AAC/BgB,QAAAA,KAAK,CAACH,UAAN,GAAmBK,OAAnB;AACA,eAAO,EAAE,GAAGF;AAAL,SAAP;AACH;;AACD,SAAKlB,4BAAL;AAAmC;AAC/B,YAAIsB,KAAK,GAAGD,eAAe,CAACE,IAAhB,CAAqBC,IAAI,IAAIA,IAAI,CAACX,MAAL,KAAgBO,OAA7C,CAAZ;;AACA,YAAIE,KAAK,KAAK,CAAC,CAAf,EAAkB;AACdD,UAAAA,eAAe,CAACI,MAAhB,CAAuBH,KAAvB,EAA8B,CAA9B;AACH;;AACDJ,QAAAA,KAAK,CAACR,SAAN,GAAkBW,eAAlB;AACA,eAAO,EAAE,GAAGH;AAAL,SAAP;AACH;;AACD,SAAKZ,qBAAL;AAA4B;AACxBY,QAAAA,KAAK,CAACN,SAAN,GAAkBQ,OAAlB;AACA,eAAO,EAAE,GAAGF;AAAL,SAAP;AACH;;AACD,SAAKX,0BAAL;AAAiC;AAC7BW,QAAAA,KAAK,CAACP,WAAN,GAAoBS,OAApB;AACA,eAAO,EAAE,GAAGF;AAAL,SAAP;AACH;;AACD,SAAKV,4BAAL;AAAmC;AAC/BU,QAAAA,KAAK,CAACF,aAAN,GAAsBI,OAAtB;AACA,eAAO,EAAE,GAAGF;AAAL,SAAP;AACH;;AACD,SAAKpB,yBAAL;AAAgC;AAC5B,eAAO,EAAE,GAAGoB;AAAL,SAAP;AACH;;AACD,SAAKb,2BAAL;AAAkC;AAC9Ba,QAAAA,KAAK,CAACL,MAAN,GAAeO,OAAf;AACA,eAAO,EAAE,GAAGF;AAAL,SAAP;AACH;;AACD,SAAKnB,+BAAL;AAAsC;AAClC,eAAO,EAAE,GAAGmB;AAAL,SAAP;AACH;;AAED;AACI,aAAOA,KAAP;AAnDR;AAqDH,CAvDM;KAAMD,sB","sourcesContent":["import { ADD_LIST_MOVIE_MANAGEMENT, CREAT_SCHEDULE_MOVIE_MANAGEMENT, DELETE_LIST_MOVIE_MANAGEMENT, GET_CODE_CINEMA_MOVIE_MANAGEMENT, GET_CUM_RAP_MOVIE_MANAGEMENT, GET_LIST_MOVIE_MANAGEMENT, GET_LIST_MOVIE_SEARCH_MANAGEMENT, GET_MAPHIM_MOVIE_MANAGEMENT, INFO_MOVIE_MANAGEMENT, PAGE_FORM_MOVIE_MANAGEMENT, UPDATE_LIST_MOVIE_MANAGEMENT } from \"../constants/movieManagement.constant\"\n\nconst initialState = {\n    movieList: [],\n    pageFormAdd: \"listMovie\",\n    infoMovie: {},\n    maPhim: \"\",\n    codeCinema: {},\n    codeCumRap: [],\n    updateSuccess: 0,\n}\n\nexport const MovieManagementReducer = (state = initialState, { type, payload }) => {\n    let movieListUpdate = [...state.movieList]\n    switch (type) {\n\n        case GET_LIST_MOVIE_MANAGEMENT: {\n            state.movieList = payload\n            return { ...state, ...payload }\n        }\n        case GET_LIST_MOVIE_SEARCH_MANAGEMENT: {\n            movieListUpdate = payload\n            state.movieList = movieListUpdate\n            return { ...state, ...payload }\n        }\n        case GET_CODE_CINEMA_MOVIE_MANAGEMENT: {\n            state.codeCinema = payload;\n            return { ...state }\n        }\n        case GET_CUM_RAP_MOVIE_MANAGEMENT: {\n            state.codeCumRap = payload;\n            return { ...state }\n        }\n        case DELETE_LIST_MOVIE_MANAGEMENT: {\n            let index = movieListUpdate.find(item => item.maPhim === payload)\n            if (index !== -1) {\n                movieListUpdate.splice(index, 1)\n            }\n            state.movieList = movieListUpdate\n            return { ...state }\n        }\n        case INFO_MOVIE_MANAGEMENT: {\n            state.infoMovie = payload\n            return { ...state }\n        }\n        case PAGE_FORM_MOVIE_MANAGEMENT: {\n            state.pageFormAdd = payload\n            return { ...state }\n        }\n        case UPDATE_LIST_MOVIE_MANAGEMENT: {\n            state.updateSuccess = payload\n            return { ...state }\n        }\n        case ADD_LIST_MOVIE_MANAGEMENT: {\n            return { ...state }\n        }\n        case GET_MAPHIM_MOVIE_MANAGEMENT: {\n            state.maPhim = payload\n            return { ...state }\n        }\n        case CREAT_SCHEDULE_MOVIE_MANAGEMENT: {\n            return { ...state }\n        }\n\n        default:\n            return state\n    }\n}\n"]},"metadata":{},"sourceType":"module"}