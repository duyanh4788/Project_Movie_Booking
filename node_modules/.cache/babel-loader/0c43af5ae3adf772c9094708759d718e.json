{"ast":null,"code":"import { DELETE_LIST_MOVIE_MANAGEMENT, GET_LIST_MOVIE_MANAGEMENT } from \"../constants/movieManagement.constant\";\nconst initialState = {\n  movieList: []\n};\nexport const MovieManagementReducer = (state = initialState, {\n  type,\n  payload\n}) => {\n  let movieListUpdate = [...state.movieList];\n\n  switch (type) {\n    case GET_LIST_MOVIE_MANAGEMENT:\n      {\n        state.movieList = payload;\n        return { ...state,\n          ...payload\n        };\n      }\n\n    case DELETE_LIST_MOVIE_MANAGEMENT:\n      {\n        let index = movieListUpdate.find(item => item.maPhim === payload);\n\n        if (index !== -1) {\n          movieListUpdate.splice(index, 1);\n        }\n\n        state.movieList = movieListUpdate;\n        return { ...state\n        };\n      }\n\n    default:\n      return state;\n  }\n};\n_c = MovieManagementReducer;\n\nvar _c;\n\n$RefreshReg$(_c, \"MovieManagementReducer\");","map":{"version":3,"sources":["/home/atat-dev/Desktop/VS_CODE/Project_Movie_Booking/src/store/reducers/movieManagement.reducer.js"],"names":["DELETE_LIST_MOVIE_MANAGEMENT","GET_LIST_MOVIE_MANAGEMENT","initialState","movieList","MovieManagementReducer","state","type","payload","movieListUpdate","index","find","item","maPhim","splice"],"mappings":"AAAA,SAASA,4BAAT,EAAuCC,yBAAvC,QAAwE,uCAAxE;AAEA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,SAAS,EAAE;AADM,CAArB;AAIA,OAAO,MAAMC,sBAAsB,GAAG,CAACC,KAAK,GAAGH,YAAT,EAAuB;AAAEI,EAAAA,IAAF;AAAQC,EAAAA;AAAR,CAAvB,KAA6C;AAC/E,MAAIC,eAAe,GAAG,CAAC,GAAGH,KAAK,CAACF,SAAV,CAAtB;;AACA,UAAQG,IAAR;AAEI,SAAKL,yBAAL;AAAgC;AAC5BI,QAAAA,KAAK,CAACF,SAAN,GAAkBI,OAAlB;AACA,eAAO,EAAE,GAAGF,KAAL;AAAY,aAAGE;AAAf,SAAP;AACH;;AACD,SAAKP,4BAAL;AAAmC;AAC/B,YAAIS,KAAK,GAAGD,eAAe,CAACE,IAAhB,CAAqBC,IAAI,IAAIA,IAAI,CAACC,MAAL,KAAgBL,OAA7C,CAAZ;;AACA,YAAIE,KAAK,KAAK,CAAC,CAAf,EAAkB;AACdD,UAAAA,eAAe,CAACK,MAAhB,CAAuBJ,KAAvB,EAA8B,CAA9B;AACH;;AACDJ,QAAAA,KAAK,CAACF,SAAN,GAAkBK,eAAlB;AACA,eAAO,EAAE,GAAGH;AAAL,SAAP;AACH;;AACD;AACI,aAAOA,KAAP;AAfR;AAiBH,CAnBM;KAAMD,sB","sourcesContent":["import { DELETE_LIST_MOVIE_MANAGEMENT, GET_LIST_MOVIE_MANAGEMENT } from \"../constants/movieManagement.constant\"\n\nconst initialState = {\n    movieList: [],\n}\n\nexport const MovieManagementReducer = (state = initialState, { type, payload }) => {\n    let movieListUpdate = [...state.movieList]\n    switch (type) {\n\n        case GET_LIST_MOVIE_MANAGEMENT: {\n            state.movieList = payload\n            return { ...state, ...payload }\n        }\n        case DELETE_LIST_MOVIE_MANAGEMENT: {\n            let index = movieListUpdate.find(item => item.maPhim === payload)\n            if (index !== -1) {\n                movieListUpdate.splice(index, 1)\n            }\n            state.movieList = movieListUpdate\n            return { ...state }\n        }\n        default:\n            return state\n    }\n}\n"]},"metadata":{},"sourceType":"module"}