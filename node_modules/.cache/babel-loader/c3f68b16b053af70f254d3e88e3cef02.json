{"ast":null,"code":"import { ADD_CLIENT_MANAGEMENT, ERROR_ADD_CLIENT_MANAGEMENT, GET_INFO_CLIENT, GET_LIST_CLIENT_MANAGEMENT, GET_LIST_SEARCH_CLIENT_MANAGEMENT, PAGE_EDIT_CLIENT, TAIKHOAN_CLIENT_MANAGEMENT, UPDATE_LIST_CLIENT_MANAGEMENT } from \"../constants/clientManagement.constant\";\nconst initialState = {\n  listClient: [],\n  pageFormClient: \"listUser\",\n  infoClient: {},\n  addSuccess: {},\n  addError: \"\"\n};\nexport const ClientManagementReducer = (state = initialState, {\n  type,\n  payload\n}) => {\n  let listClientUpdate = [...state.listClient];\n\n  switch (type) {\n    case GET_LIST_CLIENT_MANAGEMENT:\n      state.listClient = payload;\n      return { ...state,\n        ...payload\n      };\n\n    case GET_LIST_SEARCH_CLIENT_MANAGEMENT:\n      {\n        listClientUpdate = payload;\n        state.listClient = listClientUpdate;\n        return { ...state\n        };\n      }\n\n    case TAIKHOAN_CLIENT_MANAGEMENT:\n      {\n        let index = listClientUpdate.findIndex(item => item.taiKhoan === payload);\n\n        if (index !== -1) {\n          listClientUpdate.splice(index, 1);\n        }\n\n        state.listClient = listClientUpdate;\n        return { ...state\n        };\n      }\n\n    case PAGE_EDIT_CLIENT:\n      {\n        state.pageFormClient = payload;\n        return { ...state\n        };\n      }\n\n    case GET_INFO_CLIENT:\n      {\n        state.infoClient = payload;\n        return { ...state\n        };\n      }\n\n    case UPDATE_LIST_CLIENT_MANAGEMENT:\n      {\n        console.log(payload);\n        return { ...state\n        };\n      }\n\n    case ADD_CLIENT_MANAGEMENT:\n      {\n        state.addSuccess = payload;\n        return { ...state\n        };\n      }\n\n    case ERROR_ADD_CLIENT_MANAGEMENT:\n      {\n        if (payload.data) {\n          state.addError = payload.data;\n        } else {\n          state.addError = \"\";\n        }\n\n        return { ...state\n        };\n      }\n\n    default:\n      return state;\n  }\n};\n_c = ClientManagementReducer;\n\nvar _c;\n\n$RefreshReg$(_c, \"ClientManagementReducer\");","map":{"version":3,"sources":["/home/atat-dev/Desktop/VS_CODE/Project_Movie_Booking/src/store/reducers/clientManagement.reducer.js"],"names":["ADD_CLIENT_MANAGEMENT","ERROR_ADD_CLIENT_MANAGEMENT","GET_INFO_CLIENT","GET_LIST_CLIENT_MANAGEMENT","GET_LIST_SEARCH_CLIENT_MANAGEMENT","PAGE_EDIT_CLIENT","TAIKHOAN_CLIENT_MANAGEMENT","UPDATE_LIST_CLIENT_MANAGEMENT","initialState","listClient","pageFormClient","infoClient","addSuccess","addError","ClientManagementReducer","state","type","payload","listClientUpdate","index","findIndex","item","taiKhoan","splice","console","log","data"],"mappings":"AAAA,SAASA,qBAAT,EAAgCC,2BAAhC,EAA6DC,eAA7D,EAA8EC,0BAA9E,EAA0GC,iCAA1G,EAA6IC,gBAA7I,EAA+JC,0BAA/J,EAA2LC,6BAA3L,QAAgO,wCAAhO;AAEA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,UAAU,EAAE,EADK;AAEjBC,EAAAA,cAAc,EAAE,UAFC;AAGjBC,EAAAA,UAAU,EAAE,EAHK;AAIjBC,EAAAA,UAAU,EAAE,EAJK;AAKjBC,EAAAA,QAAQ,EAAE;AALO,CAArB;AAQA,OAAO,MAAMC,uBAAuB,GAAG,CAACC,KAAK,GAAGP,YAAT,EAAuB;AAAEQ,EAAAA,IAAF;AAAQC,EAAAA;AAAR,CAAvB,KAA6C;AAChF,MAAIC,gBAAgB,GAAG,CAAC,GAAGH,KAAK,CAACN,UAAV,CAAvB;;AACA,UAAQO,IAAR;AACI,SAAKb,0BAAL;AACIY,MAAAA,KAAK,CAACN,UAAN,GAAmBQ,OAAnB;AACA,aAAO,EAAE,GAAGF,KAAL;AAAY,WAAGE;AAAf,OAAP;;AACJ,SAAKb,iCAAL;AAAwC;AACpCc,QAAAA,gBAAgB,GAAGD,OAAnB;AACAF,QAAAA,KAAK,CAACN,UAAN,GAAmBS,gBAAnB;AACA,eAAO,EAAE,GAAGH;AAAL,SAAP;AACH;;AACD,SAAKT,0BAAL;AAAiC;AAC7B,YAAIa,KAAK,GAAGD,gBAAgB,CAACE,SAAjB,CAA2BC,IAAI,IAAIA,IAAI,CAACC,QAAL,KAAkBL,OAArD,CAAZ;;AACA,YAAIE,KAAK,KAAK,CAAC,CAAf,EAAkB;AACdD,UAAAA,gBAAgB,CAACK,MAAjB,CAAwBJ,KAAxB,EAA+B,CAA/B;AACH;;AACDJ,QAAAA,KAAK,CAACN,UAAN,GAAmBS,gBAAnB;AACA,eAAO,EAAE,GAAGH;AAAL,SAAP;AACH;;AACD,SAAKV,gBAAL;AAAuB;AACnBU,QAAAA,KAAK,CAACL,cAAN,GAAuBO,OAAvB;AACA,eAAO,EAAE,GAAGF;AAAL,SAAP;AACH;;AACD,SAAKb,eAAL;AAAsB;AAClBa,QAAAA,KAAK,CAACJ,UAAN,GAAmBM,OAAnB;AACA,eAAO,EAAE,GAAGF;AAAL,SAAP;AACH;;AACD,SAAKR,6BAAL;AAAoC;AAChCiB,QAAAA,OAAO,CAACC,GAAR,CAAYR,OAAZ;AACA,eAAO,EAAE,GAAGF;AAAL,SAAP;AACH;;AACD,SAAKf,qBAAL;AAA4B;AACxBe,QAAAA,KAAK,CAACH,UAAN,GAAmBK,OAAnB;AACA,eAAO,EAAE,GAAGF;AAAL,SAAP;AACH;;AACD,SAAKd,2BAAL;AAAkC;AAC9B,YAAIgB,OAAO,CAACS,IAAZ,EAAkB;AACdX,UAAAA,KAAK,CAACF,QAAN,GAAiBI,OAAO,CAACS,IAAzB;AACH,SAFD,MAEO;AACHX,UAAAA,KAAK,CAACF,QAAN,GAAiB,EAAjB;AACH;;AACD,eAAO,EAAE,GAAGE;AAAL,SAAP;AACH;;AAED;AACI,aAAOA,KAAP;AA3CR;AA6CH,CA/CM;KAAMD,uB","sourcesContent":["import { ADD_CLIENT_MANAGEMENT, ERROR_ADD_CLIENT_MANAGEMENT, GET_INFO_CLIENT, GET_LIST_CLIENT_MANAGEMENT, GET_LIST_SEARCH_CLIENT_MANAGEMENT, PAGE_EDIT_CLIENT, TAIKHOAN_CLIENT_MANAGEMENT, UPDATE_LIST_CLIENT_MANAGEMENT } from \"../constants/clientManagement.constant\"\n\nconst initialState = {\n    listClient: [],\n    pageFormClient: \"listUser\",\n    infoClient: {},\n    addSuccess: {},\n    addError: \"\",\n}\n\nexport const ClientManagementReducer = (state = initialState, { type, payload }) => {\n    let listClientUpdate = [...state.listClient]\n    switch (type) {\n        case GET_LIST_CLIENT_MANAGEMENT:\n            state.listClient = payload\n            return { ...state, ...payload }\n        case GET_LIST_SEARCH_CLIENT_MANAGEMENT: {\n            listClientUpdate = payload\n            state.listClient = listClientUpdate\n            return { ...state }\n        }\n        case TAIKHOAN_CLIENT_MANAGEMENT: {\n            let index = listClientUpdate.findIndex(item => item.taiKhoan === payload)\n            if (index !== -1) {\n                listClientUpdate.splice(index, 1)\n            }\n            state.listClient = listClientUpdate\n            return { ...state }\n        }\n        case PAGE_EDIT_CLIENT: {\n            state.pageFormClient = payload;\n            return { ...state }\n        }\n        case GET_INFO_CLIENT: {\n            state.infoClient = payload\n            return { ...state }\n        }\n        case UPDATE_LIST_CLIENT_MANAGEMENT: {\n            console.log(payload);\n            return { ...state }\n        }\n        case ADD_CLIENT_MANAGEMENT: {\n            state.addSuccess = payload\n            return { ...state }\n        }\n        case ERROR_ADD_CLIENT_MANAGEMENT: {\n            if (payload.data) {\n                state.addError = payload.data\n            } else {\n                state.addError = \"\"\n            }\n            return { ...state }\n        }\n\n        default:\n            return state\n    }\n}\n"]},"metadata":{},"sourceType":"module"}